
# tmux configuration
# some things borrowed from https://github.com/samoshkin/tmux-config

# set prefix to Ctrl-backslash
# for some reason I can't get this to work in the .conf file; 
# instead I just have to run it via cli. Kept here for reference.
# actually, this might be working
set-option -g prefix 'C-\' 
#'# this line to reset the syntax parser, it doesn't like the 'C-\' above
#bind -n C-\ send-prefix
#bind  C-\ send-prefix

# increase the size of the scrollback buffer; default is 2000 lines
set-option -g history-limit 50000

setw -g aggressive-resize on

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"


# New (v >= 2.2?) universal mouse flag
set -g mouse on
# Older individual mouse flags
set -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-select-window on

# zoom this pane to full screen: "+" key
bind + \
    new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
    swap-pane -s tmux-zoom.0 \;\
    select-window -t tmux-zoom
# restore this pane: "-" key
bind - \
    last-window \;\
    swap-pane -s tmux-zoom.0 \;\
    kill-window -t tmux-zoom


# use M-Left and M-Right to move current window (tab)
bind -n M-Left  swap-window -t -1 
bind -n M-Right swap-window -t +1 

#bind -n C-| \
#    new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
#    swap-pane -s tmux-zoom.0 \;\
#    select-window -t tmux-zoom


# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf &&\
 tmux display \"Config reloaded\"'"

# Reload tmux configuration
# changed to R from C-r because C-r conflicts with tmux-resurrect plugin bindings
bind R source-file ~/.tmux.conf \; display "Config reloaded"

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# upgrade $TERM
set -g default-terminal "screen-256color"

# Activity bell and whistles
set -g visual-activity on



# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================
set -g @copy_use_osc52_fallback on

yank="~/.tmux/yank.sh"

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection.
# Clear select on subsequent mouse click
bind -T copy-mode MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode MouseDown1Pane select-pane \;\
   send-keys -X clear-selection

# iTerm2 works with clipboard out of the box, set-clipboard already set to "external"
# tmux show-options -g -s set-clipboard
# set-clipboard on|external



# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

# window segments in status line
set -g window-status-separator ""
#separator_powerline_left=">"
#separator_powerline_right="<"

# setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
setw -g window-status-current-style "fg=$color_light,bold,bg=$color_main"
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[defa\
ult] #I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] #S #[default]"
wg_battery="#{battery_status_fg} #{battery_icon} #{battery_percentage}"
wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
# TODO: highlighted for nested local session as well
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-left "$wg_session"
#set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host | $wg_date $wg_battery #{online_status}"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed $wg_user_host | $wg_date #{online_status}"




# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/23\
7

# Also, change some visual styles when window keys are off
#bind -T root F10  \  # F10 conflicts with emacs menu key
bind F6  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_cur\
rent_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color\
_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

#bind -T off F10 \  # F10 conflicts with emacs menu key
bind -T off F6  \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S









# TPM, tmux plugin manager stuff

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# auto-restore last saved environment when tmux is started:
set -g @continuum-restore 'on'

# from samoshkin/tmux-config
  # adds highlight in status bar when prefix is pressed
  set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

  # file tree sidebar
  set -g @plugin 'tmux-plugins/tmux-sidebar'

  # allows regex searches  
  set -g @plugin 'tmux-plugins/tmux-copycat'

  set -g @plugin 'tmux-plugins/tmux-open'

  # Plugin properties
  set -g @sidebar-tree 't'
  set -g @sidebar-tree-focus 'T'
  set -g @sidebar-tree-command 'tree -C'

  set -g @open-S 'https://www.google.com/search?q='




# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
